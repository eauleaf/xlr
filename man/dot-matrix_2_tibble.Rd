% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entibble.R
\name{.matrix_2_tibble}
\alias{.matrix_2_tibble}
\title{Transforms matrix to named tibble}
\usage{
.matrix_2_tibble(
  .in_matrix = NULL,
  .quo_expr = "as.matrix(...)",
  .rowname = "rowname",
  .name_repair = "minimal"
)
}
\value{
a tibble with names
}
\description{
Different defaults from \code{\link[tibble:tibble]{tibble::tibble()}}:
\itemize{
\item Matrices become list objects with multiple columns rather than 1
\item Rownames become first column if they exist
\item If only 1 column, it is named by input expression
\item Otherwise columns are named like \code{\link[=as.data.frame]{as.data.frame()}}, eg. 'V1', 'V2', etc.
}
}
\examples{
as.matrix(1:10) |> .matrix_2_tibble()
as.matrix(1:10) |> .matrix_2_tibble(.rowname = 'hello') # should ignore rowname
as.matrix(warpbreaks[1:10, ]) |> .matrix_2_tibble()
as.matrix(warpbreaks[1:10, ]) |> .matrix_2_tibble(.rowname = 'observer num')
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE, dimnames = list(c('row1', 'row2'), c('C.1', 'C.2', 'C.3'))) |> .matrix_2_tibble()
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE, dimnames = list(c('row1', 'row2'), c('C.1', 'C.2', 'C.3'))) |> .matrix_2_tibble(.rowname = 'rownums')
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE) |> .matrix_2_tibble()
as.matrix(1:10) |> .matrix_2_tibble(.name_repair = ~paste(., 'hello'))
as.matrix(enlist(1:10,11:20)) |> .matrix_2_tibble(.name_repair = "universal_quiet")
as.matrix(warpbreaks[1:10, ]) |> .matrix_2_tibble()
as.matrix(warpbreaks[1:10, ]) |> .matrix_2_tibble(.rowname = 'observer num')
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE, dimnames = list(c('row1', 'row2'), c('C.1', 'C.2', 'C.3'))) |> .matrix_2_tibble()
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE, dimnames = list(c('row1', 'row2'), c('C.1', 'C.2', 'C.3'))) |> .matrix_2_tibble(.rowname = 'rownums')
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE) |> .matrix_2_tibble()

base::asplit(2) might have worked better

}
