% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enscript.R
\name{enscript}
\alias{enscript}
\title{Writes the script to reproduce the input}
\usage{
enscript(. = NULL, to_clipboard = TRUE)
}
\arguments{
\item{.}{The data object or expression to transform into script}

\item{to_clipboard}{default TRUE; whether to copy the resulting script to the clipboard}
}
\value{
The formatted deparsed expression, invisibly if to_clipboard = FALSE.
The primary output is the object's internal expression written to clipboard memory
}
\description{
For interactive use. \code{enscript()} obtains R's
deparsed internal representation of the input data object and prepares that
object to be input from a script. The function's purpose is to save the user
the inconvenience of reformatting console output data as input code.
}
\details{
Copying formatted output to the clipboard requires package \link{clipr}.

To set up the key-chord \code{ctrl+alt+shift+n} in RStudio, use \code{\link[=set_xlr_key_chords]{set_xlr_key_chords()}}.

The \code{enscript} key-chord is helpful when making tests for a function's test file.

If using Linux, make sure to install a clipboard tool, e.g.
apt-get install xclip
or
apt-get install xsel
}
\note{
All quick-keys in {.pkg xlr} use all 3 control keys \code{ctrl + alt + shift} plus
a letter.
}
\examples{
\dontrun{

enscript(letters)
# `letters` is copied to clipboard; press `ctrl + v` to paste the output

enscript(1:5 * 10)
rep("ðŸŽŠðŸŒˆ",3) |> enscript()

dplyr::starwars |> head() |> enscript()

(flowers = tail(iris,10))
enscript(flowers)

(days_to_go <- seq.Date(Sys.Date(), by = 1, length.out = 7))
days_to_go |> enscript()

letters |> purrr::set_names(LETTERS) |> enlist() |> enscript()

colours() |> enscript()

candy <- list('lollipops','gum')
enlist(candy, !!candy, !!!candy, enlist(!!!candy)) |> enscript()
enlist(!!letters)

}

# returns the deparsed script as plain text
enscript(letters, to_clipboard = FALSE)

}
