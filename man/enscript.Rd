% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enscript.R
\name{enscript}
\alias{enscript}
\title{Write your data into an expression for a script.}
\usage{
enscript(. = NULL, width = cli::console_width() - 20, quiet = FALSE)
}
\arguments{
\item{.}{The data or object to transform into script}

\item{width}{how many characters to allow in each line of script}

\item{quiet}{TRUE or FALSE indicating whether to write the scripted
expression out to the console.}
}
\value{
The formatted deparsed expression.
The object's internal expression written to clipboard memory as side-effect
}
\description{
A convenience function for interactive use. \code{\link[=enscript]{enscript()}} obtains R's
deparsed internal representation of the input data object and prepares that
object to be input from a script. The function's purpose is to save the user
the inconvenience of reformatting console output data as input code.
}
\details{
Copies a formatted script to the clipboard and prints unformatted output
to the console.

Copying formatted output to the clipboard requires package \link{clipr}.

To set up the key-chord in RStudio. Run \code{\link[=set_xlr_key_chords]{set_xlr_key_chords()}}.

If using Linux, make sure to install a clipboard tool:
apt-get install xclip
or
apt-get install xsel
}
\note{
All quick-keys in {.pkg xlr} use all 3 control keys \code{ctrl + alt + shift} plus
a letter as key chord.)
}
\examples{
\dontrun{


enscript(letters)
# [letters] is copied to clipboard; press `ctrl + v` to paste the output

enscript(1:5 * 10)
rep("ðŸŽŠðŸŒˆ",3) |> enscript()

dplyr::starwars |> head() |> enscript()

(flowers = tail(iris,10))
enscript(flowers, quiet = F)

(days_to_go <- seq.Date(Sys.Date(), by = 1, length.out = 7))
days_to_go |> enscript()

letters |> purrr::set_names(LETTERS) |> enlist() |> enscript()

colours() |> enscript()

candy <- list('lollipops','gum')
enlist(candy, !!candy, !!!candy, rlang::list2(!!!candy)) |> enscript()
enlist(!!letters)


}


}
