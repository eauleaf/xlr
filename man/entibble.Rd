% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entibble.R
\name{entibble}
\alias{entibble}
\title{Convert a data object or list of data objects to a tibble with rownames}
\usage{
entibble(
  ...,
  .rowname = "rowname",
  .name_repair = c("minimal", "check_unique", "unique", "universal", "unique_quiet",
    "universal_quiet")
)
}
\arguments{
\item{...}{object or expression to convert to a tibble}

\item{.rowname}{string; to name the column containing rownames. If rownames are not
present in the data, \code{.rowname} is ignored.}

\item{.name_repair}{Treatment of problematic column names:
\itemize{
\item \code{"minimal"}: No name repair or checks, beyond basic existence,
\item \code{"unique"}: Make sure names are unique and not empty,
\item \code{"check_unique"}: (default value), no name repair, but check they are
\code{unique},
\item \code{"universal"}: Make the names \code{unique} and syntactic
\item a function: apply custom name repair (e.g., \code{.name_repair = make.names}
for names in the style of base R).
\item A purrr-style anonymous function, see \code{\link[rlang:as_function]{rlang::as_function()}}
}

This argument is passed on as \code{repair} to \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}.
See there for more details on these terms and the strategies used
to enforce them.}
}
\value{
a tibble with rownames in a column
}
\description{
Same as \code{\link[=tibble]{tibble()}} with different defaults.
\link{entibble}:
\itemize{
\item Always includes rownames, if available, as the first column of the tibble
\item Is not concerned with duplicate column names unless specified by user with .name_repair
\item Does not repeat input elements to obtain common lengths
\item Transforms lists with uniform arrays into columns of a tibble
\item Treats ragged list of input elements similar to \code{\link[=tibble]{tibble()}} but includes names as column if possible
\item Arranges lists of lists to produce a single table, if row dimensions allow it
}
}
\details{
@details
Entibble is designed to work with the function \code{\link[=xl]{xl()}} to produce a viewable
output of R data in spreadsheets. To help \code{\link[=xl]{xl()}} succeed as often as possible, \code{\link[=entibble]{entibble()}} is
liberal about names, such as duplicate column names, and makes an effort to produce a flat table
in place of a nested tibble.
}
\examples{
entibble('')
letters |> entibble()
letters |>  purrr::set_names(LETTERS) |> entibble()
letters |>  purrr::set_names(LETTERS) |> entibble(.rowname = 'user-specified rowname')
(example_data <- letters |>  purrr::set_names(LETTERS))
example_data |> entibble()
example_data |> entibble(.rowname = 'user-specified rowname')
example_data |> entibble(.name_repair = ~c('name_A', 'name_B'))
tibble::tibble(example_data, !!!letters) # ragged data
entibble(example_data, !!!letters) # ragged data
entibble(!!!letters)
tibble::tibble(!!!letters)
entibble(example_data, example_data)
# tibble::tibble(example_data, example_data)

letters |> purrr::set_names(LETTERS) |> as.list() |> tibble::tibble()
letters |> purrr::set_names(LETTERS) |> as.list() |> entibble()


enlist(head(iris), tail(mtcars)) |> tibble::tibble()
enlist(head(iris), tail(mtcars)) |> entibble()

enlist(head(iris), head(mtcars)) |> entibble()
entibble(head(iris), head(mtcars))
tibble::tibble(head(iris), head(mtcars))
entibble(head(iris), head(mtcars, 11))
# tibble::tibble(head(iris), head(mtcars,11))


tibble::tibble(y = 1:3,x = 11:13)
entibble(y = c(1, 2, 3),x = c(11, 12, 13))
# tibble::tibble(x = 1:3,x = 11:13)
entibble(x = 1:3, x = 11:13)
entibble(x = 1:3,x = 10:14, .name_repair = 'minimal')
# tibble::tibble(x = 1:3,x = 10:14, .name_repair = 'minimal')
tibble::tibble(x = 1:3,x = 11:13, .name_repair = 'unique')
entibble(x = 1:3,x = 11:13, .name_repair = 'unique')
entibble(x = 1:3,x = 11:13, .name_repair = 'unique_quiet')
entibble(x = 1:3,x = 11:13, .name_repair = ~scrub_tabnames(., sep = ' <-- ', quiet = TRUE))
enlist(head(iris), head(mtcars))

tibble::tibble(x = 1:3,x = 11:13, .name_repair = ~scrub_tabnames(., sep = ' <-- ', quiet = TRUE))

as.matrix(1:10) |> rownames()
as.matrix(1:10) |> entibble()
as.matrix(list(1:10,11:20)) |> entibble()
as.matrix(list(1:10,11:20)) |> tibble::tibble()
as.matrix(1:10) |> tibble::tibble()
as.matrix(warpbreaks[1:10, ]) |> tibble::has_rownames()
as.matrix(warpbreaks[1:10, ]) |> entibble()
# ignores unused rownames
as.matrix(warpbreaks[1:10, ]) |> entibble(.rowname = 'row_nums')
matrix(c(1, 2, 3, 11, 12, 13), nrow = 2, ncol = 3, byrow = TRUE, dimnames = list(c('row1', 'row2'), c('C.1', 'C.2', 'C.3'))) |> entibble()
tail(iris) |> tibble::has_rownames()
tail(iris) |> entibble()
mtcars |> entibble()
mtcars |> entibble(.rowname = 'vehicle')
5 |> entibble()
NA |> entibble()
NULL |> entibble()
enlist(head(iris), head(mtcars)) |> purrr::map(entibble)
enlist(letters, LETTERS) |> purrr::map(entibble)
enlist(letters, LETTERS) |> purrr::map(entibble, .name_repair = ~'a-z')
enlist(head(iris), head(mtcars)) |> entibble()
head(iris) |> purrr::map(entibble)
entibble(!!!head(iris))
enlist(head(iris), head(mtcars)) |> entibble()
enlist(head(iris), head(mtcars)) |> tibble::tibble()

letters |> purrr::set_names(LETTERS) |> tibble::tibble()
letters |> purrr::set_names(LETTERS) |> entibble()

letters |> purrr::set_names(LETTERS) |> tibble::enframe( name = 'row', value = 'blue')

# If rowname is specified, but the dataframe has no rownames, rowname is ignored.
entibble(iris, .rowname = 'flower_name')
letters |> as.list() |> tibble::tibble()
letters |> as.list() |> entibble(.rowname = 'a-z')
letters |> list() |> tibble::tibble()
letters |> list() |> entibble(.rowname = 'a-z')
letters |> enlist() |> entibble(.rowname = 'a-z')

colours() |> rlang::set_names() |> entibble() |> entibble(another_col = colours())
colours() |> rlang::set_names() |> entibble(another_col = colours())
letters |> as.list() |> enlist() |> entibble()
# dplyr::bind_cols(letters, LETTERS) |> copy_for_xl()
# letters |> rlang::set_names(LETTERS) |> copy_for_xl()

entibble(1:10,11:20)
entibble(c(1:10,11:20))

entibble(list(1:10,11:20))
tibble::tibble(list(1:10,11:20))

entibble(enlist(1:10,11:20))
entibble(enlist(1:10,11:20), .rowname = 'nums')
entibble(list(1:10),list(11:20))
tibble::tibble(enlist(1:10),enlist(11:20))
entibble(enlist(1:10),enlist(11:20))
entibble(enlist(1:10),enlist(11:20), .rowname = 'blue')
entibble(enlist(1:10),enlist(11:20), .rowname = 'a column name', .name_repair = 'unique')
entibble(enlist(1:10),enlist(11:20), .rowname = 'a column name', .name_repair = 'universal')
entibble(enlist(1:10),enlist(11:20), .rowname = 'a column name', .name_repair = 'universal_quiet')
entibble(enlist(list(1:10),list(11:20)))
entibble(enlist((1:10),(11:20)))

}
\seealso{
\code{\link[tibble:tibble]{tibble::tibble()}}
}
