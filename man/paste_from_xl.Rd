% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paste_from_xl.R
\name{paste_from_xl}
\alias{paste_from_xl}
\title{Paste data into Rstudio from a spreadsheet}
\usage{
paste_from_xl(has_fieldnames = NULL)
}
\arguments{
\item{has_fieldnames}{TRUE or FALSE indicating whether field names are
present in the spreadsheet data you copied. If user supplies no value,
\code{\link[=paste_from_xl]{paste_from_xl()}} guesses by looking at the clipboard data. If the function
incorrectly guesses the presence of field names, just write 'T' or 'F' into
the function that was echoed to the console.}
}
\value{
** If user copied a single spreadsheet row into the clipboard memory,
returns a vector.
** If user copied more than one spreadsheet row to the clipboard, returns a tibble.
** If user copied a local file to the clipboard, returns a string with the path to the file.
}
\description{
Imports spreadsheet data from the user's clipboard to RStudio.

Will also copy full paths if copying from an OS file navigation window.

Imported data formats in 1 of 2 ways.
\enumerate{
\item If pasting to the console window, 'ctrl+alt+shift+v' will insert a tibble
of the copied spreadsheet data.
\item If pasting to the text editor window, 'ctrl+alt+shift+v' will insert an
expression to produce the spreadsheet data
}

To set the quick keys, use \code{\link[=set_xlr_key_chords]{set_xlr_key_chords()}}
\itemize{
\item If pasting multiple spreadsheet rows, the data imports as a tibble.
\item If pasting a single spreadsheet row with multiple columns, the data imports as a vector.
\item If pasting folder and file paths from an OS navigation window, the data is imports as a vector.
}
}
\details{
To set the quick keys in RStudio, run function:
\code{\link[=set_xlr_key_chords]{set_xlr_key_chords()}}.
Or, set the quick keys manually by following these RStudio instructions:
\url{https://support.posit.co/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts-in-the-RStudio-IDE}
}
\note{
Clipboard memory is limited; if you're copying a large quantity of data from a
spreadsheet, try reading in the data instead with \code{\link[readxl:read_excel]{readxl::read_excel()}}.
}
\examples{
\dontrun{
# (All examples require the user to interactively select data.)
# Copy data from a spreadsheet into working memory with 'ctrl + c' or
# by right-clicking with the mouse and selecting 'copy', then,
# to paste the copied spreadsheet data into R, type into the R
# console:

(my_data <- paste_from_xl())
(my_data <- paste_from_xl(T))
(my_data <- paste_from_xl(F))
paste_from_xl()


}

}
