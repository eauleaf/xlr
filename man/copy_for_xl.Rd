% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy_for_xl.R
\name{copy_for_xl}
\alias{copy_for_xl}
\title{Copies data from R to your clipboard that you intend to paste into a
spreadsheet.}
\usage{
copy_for_xl(. = NULL)
}
\arguments{
\item{.}{a dataframe or object that can be coerced to a dataframe}
}
\value{
the data provided coerced to a tibble; clipboard data as side-effect
}
\description{
There are 2 ways to pass data into the function:
\enumerate{
\item Type it out the same as any other function.
\item Highlight a data object in your RStudio text editor and then press
key-chord: \code{ctrl + alt + shift + c}. (Use the quick keys just like you use
\code{ctrl + c} for copying, except that \code{\link[=copy_for_xl]{copy_for_xl()}} uses all 3 control keys
plus the 'c'.
}
}
\details{
To set up the key-chord in RStudio. Run \code{\link[=set_xlr_key_chords]{set_xlr_key_chords()}}.

Copying formatted output to the clipboard requires package \link{clipr}.

If using Linux, make sure to install a clipboard tool:
apt-get install xclip
or
apt-get install xsel

\code{\link[=copy_for_xl]{copy_for_xl()}} coerces the input data object to a tibble prior to copying to
clipboard.
}
\note{
All quick-keys in {.pkg xlr} use all 3 control keys \code{ctrl + alt + shift} plus
a letter as key chord.)
}
\examples{
\dontrun{

copy_for_xl(iris)
copy_for_xl(letters)
copy_for_xl(letters)
colours() |> copy_for_xl()
head(mtcars) |> copy_for_xl()
colours() |> rlang::set_names() |> entibble(another_col = colours()) |> copy_for_xl()
dplyr::bind_cols(letters, LETTERS) |> head() |> copy_for_xl()
letters |> rlang::set_names(LETTERS) |> copy_for_xl()


enlist(head(iris),head(mtcars)) |> copy_for_xl()

# To use quick keys. Run {.fn xlr::set_xlr_key_chords}.
# Then highlight the word 'letters' below and press key-chord `ctrl + alt + shift + c`.
letters

}

}
